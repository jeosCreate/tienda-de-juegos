.presentation div,
.categorias .content,
.resenias .father{
    flex-direction:row;
}
header,main,
.presentacion,
.presentation div,
.call-to-action,
.call-to-action div,
.categorias,
.categorias .content,
.categorias .article,
.resenias,
.resenias .father,
footer{
    display:flex;

}
header{
    width: 100%;
    height: max-content;
    flex-grow: 1;
}
header div{
    display:flex;
    justify-content: flex-end;
    flex-grow: 4;
    align-self: center;
}
main{
    flex-wrap: wrap;
    flex-direction:column;
    align-content:center;
}
.presentacion{
    align-items: center;
    justify-content:center;
    height:450px;
}
.presentation div{
    justify-content: flex-end;
}
.call-to-action{
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: max-content;
}
.call-to-action div{
    flex-direction:column;
    align-items:center;
    width:50%;
}
.categorias{
    flex-direction: column;
    flex-wrap: wrap;
    align-content: stretch;
}
.categorias .content{
    margin: 30px;
    justify-content:space-around;

}
.categorias .article{
    width:40%;
    flex-direction:column;
    flex-wrap:nowrap;
    align-items: flex-start;
    justify-content: center;
}
.resenias{
    flex-direction:column;
    justify-content:center;
    align-items:stretch;
}
.resenias .father{
    justify-content:space-evenly;
    align-items:stretch;
}
footer{
    flex-shrink: 1;
    height: 35vh;
    flex-direction:row;
    justify-content: space-between;
}
footer h2{
    align-self: flex-start;
}
footer .contact{
    align-self: flex-end;
}



/*flex: flex-grow flex-shrink flex basis

flex grow: permite que los elementos hijo utilicen el espacio sobrante del contenedor padre

flex shrink: permite que los elementos hijo se reduzcan cuando el contenedor padre no cuente con espacio suficiente

flex basis: permite que los elementos hijo crezca o se redezca en direccion a el eje principal de alineacion (cross axis, main axis)
*/